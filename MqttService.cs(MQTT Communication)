using System;
using MQTTnet;
using MQTTnet.Client;
using System.Text;
using System.Threading.Tasks;

namespace SmartHomeApp
{
    public class MqttService
    {
        private IMqttClient mqttClient;

        public async void StartMqtt()
        {
            var factory = new MqttFactory();
            mqttClient = factory.CreateMqttClient();

            var options = new MqttClientOptionsBuilder()
                .WithClientId("SmartHomeApp")
                .WithTcpServer("broker.hivemq.com", 1883) // Public MQTT Broker
                .Build();

            mqttClient.ApplicationMessageReceivedAsync += async e =>
            {
                string topic = e.ApplicationMessage.Topic;
                string payload = Encoding.UTF8.GetString(e.ApplicationMessage.Payload);

                Console.WriteLine($"Received: {topic} => {payload}");
            };

            await mqttClient.ConnectAsync(options);
            await mqttClient.SubscribeAsync("smarthome/temperature");
            await mqttClient.SubscribeAsync("smarthome/humidity");
        }

        public async void PublishMessage(string topic, string message)
        {
            if (mqttClient.IsConnected)
            {
                var msg = new MqttApplicationMessageBuilder()
                    .WithTopic(topic)
                    .WithPayload(message)
                    .Build();

                await mqttClient.PublishAsync(msg);
            }
        }
    }
}
